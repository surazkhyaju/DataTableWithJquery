@model List<DataTableCRUD.Models.ViewModel.DailyDeveloperTaskLogViewModel>
@{
    ViewBag.Title = "Bulk";
}


@using DataTableCRUD.Helper;
<h2>Bulk</h2>

@section Scripts{
    @*<script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/Gruntfile.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-form-validator/2.3.26/jquery.form-validator.min.js"></script>*@


    <script type="text/javascript">

        $(function () {
            var table = $('#table-data')[0];
            $(table).delegate('.tr_clone_add', 'click', function () {

                var thisRow = $(this).closest('tr')[0];


                $(thisRow).clone().insertAfter(thisRow).find('input:text').val('');
                maintainIDs();
                $(".datepicker").datetimepicker();
                $(".timepicker").datetimepicker({
                    format: 'LT'
                });
                ApplyValidation();

            });
            function maintainIDs() {
                $('#table-data > tbody > tr').each(function () {
                    var index = $(this).index();
                    $(this).find('input[name], select[name]').each(function () {
                        $(this).attr('name', $(this).attr('name').replace(/\d+/, index));
                    });
                });
            }
            $("#table-data").on("click", ".tr_remove", function () {
                $(this).closest("tr").remove();
                maintainIDs();
                ApplyValidation();

            });
            $(".datepicker").datetimepicker();
            $(".timepicker").datetimepicker({
                format: 'LT',

            });

            ApplyValidation();

            function ApplyValidation() {
                var validator = $("#bulkForm").validate({
                    ignore: "",
                    //errorPlacement: function (error, element) {
                    //    //if (errors) {
                    //    //    // add items to error list and map
                    //    //    $.extend(this.errorMap, errors);
                    //    //    this.errorList = [];
                    //    //    for (var name in errors) {
                    //    //        this.errorList.push({
                    //    //            message: errors[name],
                    //    //            element: this.findByName(name)[0]
                    //    //        });
                    //    //    }
                    //    //    // remove items from success list
                    //    //    this.successList = $.grep(this.successList, function (element) {
                    //    //        return !(element.name in errors);
                    //    //    });
                    //    //}

                    //    //$(this.errorList).each(function (index, item) {
                    //    $('ul#errors').append('<li>' + element.attr('name') + ' : ' + error.html() + '</li>')
                    //    //})


                    //},
                    //success: function (error) {
                    //    $('ul#errors').html('');
                    //}


                });
                $('[name$=JSFileName]').each(function (index, item) {
                    $(item).rules("add", {
                        required: true,
                       
                        messages: {
                            required: 'Required',
                            
                        }
                    });
                });
                $('[name$=View]').each(function (index, item) {
                    $(item).rules("add", {
                        required: true,

                        messages: {
                            required: 'Required',

                        }
                    });
                });
                $('[name$=Remarks]').each(function (index, item) {
                    $(item).rules("add", {
                        required: true,

                        messages: {
                            required: 'Required',

                        }
                    });
                });
                //JSFileName

            }

            $("#submitForm").on("click", function (e) {
                //$("#bulkForm").validate();
                e.preventDefault();

                var $form = $("#bulkForm");
                if (!$form.valid()) {
                    return false;
                    alert('Invalid');
                }
                $.ajax({
                    url: '/DailyDeveloperTaskLog/Bulk',
                    data: $form.serializeObject(),
                    method: 'Post',
                    success: function (result) {
                        alert("result is added successfully");
                    },
                    error: function (error) {
                        alert("please fulfill all the form ");
                    }
                })
            });
        });

    </script>




}

@using (Html.BeginForm("Bulk", "DailyDeveloperTaskLog", FormMethod.Post, new { id = "bulkForm" }))

{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <li><a href="#">Welcome</a></li>

    <ul id="errors"></ul>

    <table class="table table-hover table-bordered" id="table-data">

        <thead>
            <tr>
                <th>Date</th>
                <th>Module-Name</th>
                <th>Component-Name</th>
                <th>Controller-Name</th>
                <th>Service-Name</th>
                <th>Status</th>
                <th>JS file Name</th>
                <th>View-Name</th>
                <th>Time-Start</th>
                <th>Time-End</th>
                <th>Task</th>
                <th></th>
                
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count; i++)
            {
                var fr = Model[i];
                <tr>
                    <td>@Html.TextBoxFor(x => Model[i].Date, new { @class = "form-control datepicker" })  </td>
                    <td>@Html.DropDownListFor(x => Model[i].ModuleId, new SelectList(ViewBag.Modules, "ModuleId", "ModuleName", fr.ModuleId), new { @class = "form-control  " })</td>
                    <td>@Html.DropDownListFor(x => Model[i].ComponentId, new SelectList(ViewBag.Components, "ComponentId", "ComponentName", fr.ComponentId), new { @class = "form-control " })</td>
                    <td>@Html.DropDownListFor(x => Model[i].ControllerId, new SelectList(ViewBag.ControllerDetails, "ControllerId", "ControllerName", fr.ControllerId), new { @class = "form-control " })</td>
                    <td>@Html.DropDownListFor(x => Model[i].ServiceId, new SelectList(ViewBag.Services, "ServiceId", "ServiceName", fr.ServiceId), new { @class = "form-control " })</td>
                    <td>@Html.DropDownListFor(x => Model[i].Status, DropdownHelper.ServiceTypeSelectList, new { @class = "form-control " })</td>
                    <td>@Html.TextBoxFor(x => Model[i].JSFileName, new { @class = "form-control" })</td>
                    <td>@Html.TextBoxFor(x => Model[i].View, new { @class = "form-control " })</td>
                    <td>@Html.TextBoxFor(x => Model[i].StartTime, new { @class = "form-control timepicker" })</td>
                    <td>@Html.TextBoxFor(x => Model[i].EndTime, new { @class = "form-control  timepicker" })</td>
                    <td>@Html.TextBoxFor(x => Model[i].Remarks, new { @class = "form-control " })</td>

                    
                    <td>
                        <i class="fa fa-plus tr_clone_add" title="Add" />
                        <i class="fa fa-trash tr_remove" title="Remove" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <input type="submit" name="submitData" class="bottom btn btn-primary" value="Submit" id="submitForm" />
    <span id="submitdata"></span>



}


